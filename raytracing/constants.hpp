#pragma once

#include "common.hpp"
#include "structs.hpp"

const int BENCHMARK = 0;
const int NUM_IMAGES = 10;
const int N_THREADS = 0;

const int IMAGE_WIDTH = 2880;//9600;
const int IMAGE_HEIGHT = 1620;//5400;

const double SCREEN_WIDTH = 35.0;		// cm
const double SCREEN_HEIGHT = 19.6875;	// cm
const double DIST_FROM_SCREEN = 40.0;	// cm

const int MAX_RECURSION = 3;

const double DFLT_REFLECTION = 0.0;
const double DFLT_REFRACTION = 0.0;
const double DFLT_REFRACTIVE_INDEX = 1.5;

const double DFLT_CONSTANT_ATTENUATION = 1.0;
const double DFLT_LINEAR_ATTENUATION = 0.0;
const double DFLT_QUADRATIC_ATTENUATION = 0.0001;

const double AMBIENT_R = 0.00;
const double AMBIENT_G = 0.00;
const double AMBIENT_B = 0.00;

const double BG_R = 0.0;
const double BG_G = 0.0;
const double BG_B = 0.0;

const double INF = std::numeric_limits<double>::infinity();

const double HALF_HEIGHT = SCREEN_HEIGHT / 2;				// half of the height and width of the screen (saved to optimize calculations)
const double HALF_WIDTH  = SCREEN_WIDTH / 2;

const double HEIGHT_RATIO = SCREEN_HEIGHT / IMAGE_HEIGHT;	// ratio to convert image size (in pixels) to screen size (in cm)
const double WIDTH_RATIO  = SCREEN_WIDTH  / IMAGE_WIDTH;

std::map<std::string, material_s> create_materials()
{
	std::map<std::string, material_s> m;

	m["WHITE"]				= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["XXXXXXXXXXXXXX"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["RED"]				= { {1.00000, 0.00000, 0.00000}, {1.00000, 0.00000, 0.00000}, {1.00000, 0.00000, 0.00000}, 52.20000 };
	m["XXXXXXXXXXXXXX"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["XXXXXXXXXXXXXX"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["YELLOW"]				= { {1.00000, 1.00000, 0.00000}, {1.00000, 1.00000, 0.00000}, {1.00000, 1.00000, 0.00000}, 52.20000 };
	m["XXXXXXXXXXXXXX"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["GREEN"]				= { {0.00000, 1.00000, 0.00000}, {0.00000, 1.00000, 0.00000}, {0.00000, 1.00000, 0.00000}, 52.20000 };
	m["CYAN"]				= { {0.00000, 1.00000, 1.00000}, {0.00000, 1.00000, 1.00000}, {0.00000, 1.00000, 1.00000}, 52.20000 };
	m["BLUE"]				= { {0.00000, 0.00000, 1.00000}, {0.00000, 0.00000, 1.00000}, {0.00000, 0.00000, 1.00000}, 52.20000 };
	m["XXXXXXXXXXXXXX"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, 52.20000 };
	m["BLACK"]				= { {0.00000, 0.00000, 0.00000}, {0.00000, 0.00000, 0.00000}, {0.00000, 0.00000, 0.00000}, 51.20000 };

	m["EMERALD"]			= { {0.02150, 0.17450, 0.02150}, {0.07568, 0.61424, 0.07568}, {0.63300, 0.72781, 0.63300}, 76.80000 };
	m["JADE"]				= { {0.13500, 0.22250, 0.15750}, {0.54000, 0.89000, 0.63000}, {0.31623, 0.31623, 0.31623}, 12.80000 };
	m["OBSIDIAN"]			= { {0.05375, 0.05000, 0.06625}, {0.18275, 0.17000, 0.22525}, {0.33274, 0.32863, 0.34643}, 38.40000 };
	m["PEARL"]				= { {0.25000, 0.20725, 0.20725}, {1.00000, 0.82900, 0.82900}, {0.29665, 0.29665, 0.29665}, 11.26400 };
	m["RUBY"]				= { {0.17450, 0.01175, 0.01175}, {0.61424, 0.04136, 0.04136}, {0.72781, 0.62696, 0.62696}, 76.80000 };
	m["TURQUOISE"]			= { {0.10000, 0.18725, 0.17450}, {0.39600, 0.74151, 0.69102}, {0.29725, 0.30829, 0.30668}, 12.80000 };
	m["BRASS"]				= { {0.32941, 0.22353, 0.02745}, {0.78039, 0.56863, 0.11373}, {0.99216, 0.94118, 0.80784}, 27.89744 };
	m["BRONZE"]				= { {0.21250, 0.12750, 0.05400}, {0.71400, 0.42840, 0.18144}, {0.39355, 0.27191, 0.16672}, 25.60000 };
	m["CHROME"]				= { {0.25000, 0.25000, 0.25000}, {0.40000, 0.40000, 0.40000}, {0.77460, 0.77460, 0.77460}, 76.80000 };
	m["COPPER"]				= { {0.19125, 0.07350, 0.02250}, {0.70380, 0.27048, 0.08280}, {0.25678, 0.13762, 0.08601}, 12.80000 };
	m["GOLD"]				= { {0.24725, 0.19950, 0.07450}, {0.75164, 0.60648, 0.22648}, {0.62828, 0.55580, 0.36606}, 51.20000 };
	m["SILVER"]				= { {0.19225, 0.19225, 0.19225}, {0.50754, 0.50754, 0.50754}, {0.50827, 0.50827, 0.50827}, 51.20000 };

	m["BLACKPLASTIC"]		= { {0.00000, 0.00000, 0.00000}, {0.01000, 0.01000, 0.01000}, {0.50000, 0.50000, 0.50000}, 32.00000 };
	m["CYANPLASTIC"]		= { {0.00000, 0.10000, 0.06000}, {0.00000, 0.50980, 0.50980}, {0.50196, 0.50196, 0.50196}, 32.00000 };
	m["GREENPLASTIC"]		= { {0.00000, 0.00000, 0.00000}, {0.10000, 0.35000, 0.10000}, {0.45000, 0.55000, 0.45000}, 32.00000 };
	m["REDPLASTIC"]			= { {0.00000, 0.00000, 0.00000}, {0.50000, 0.00000, 0.00000}, {0.70000, 0.60000, 0.60000}, 32.00000 };
	m["WHITEPLASTIC"]		= { {0.00000, 0.00000, 0.00000}, {0.55000, 0.55000, 0.55000}, {0.70000, 0.70000, 0.70000}, 32.00000 };
	m["YELLOWPLASTIC"]		= { {0.00000, 0.00000, 0.00000}, {0.50000, 0.50000, 0.00000}, {0.60000, 0.60000, 0.50000}, 32.00000 };

	m["BLACKRUBBER"]		= { {0.02000, 0.02000, 0.02000}, {0.01000, 0.01000, 0.01000}, {0.40000, 0.40000, 0.40000}, 10.00000 };
	m["CYANRUBBER"]			= { {0.00000, 0.05000, 0.05000}, {0.40000, 0.50000, 0.50000}, {0.04000, 0.70000, 0.70000}, 10.00000 };
	m["GREENRUBBER"]		= { {0.00000, 0.05000, 0.00000}, {0.40000, 0.50000, 0.40000}, {0.04000, 0.70000, 0.04000}, 10.00000 };
	m["REDRUBBER"]			= { {0.05000, 0.00000, 0.00000}, {0.50000, 0.40000, 0.40000}, {0.70000, 0.04000, 0.04000}, 10.00000 };
	m["WHITERUBBER"]		= { {0.05000, 0.05000, 0.05000}, {0.50000, 0.50000, 0.50000}, {0.70000, 0.70000, 0.70000}, 10.00000 };
	m["YELLOWRUBBER"]		= { {0.05000, 0.05000, 0.00000}, {0.50000, 0.50000, 0.40000}, {0.70000, 0.70000, 0.04000}, 10.00000 };

	m["WHITE_NO_SHINE"]		= { {1.00000, 1.00000, 1.00000}, {1.00000, 1.00000, 1.00000}, {1.00000, 1.000000, 1.0000}, 00.00000 };
	m["GOLD_LOW_SHINE"]		= { {0.24725, 0.19950, 0.07450}, {0.75164, 0.60648, 0.22648}, {0.62828, 0.55580, 0.36606}, 10.20000 };
	m["SILVER_LOW_SHINE"]	= { {0.19225, 0.19225, 0.19225}, {0.50754, 0.50754, 0.50754}, {0.50827, 0.50827, 0.50827}, 10.00000 };
	m["OTTER_BROWN"]		= { {0.40000, 0.26000, 0.13000}, {0.40000, 0.26000, 0.13000}, {0.40000, 0.26000, 0.13000}, 10.00000 };

	return m;
}

const std::map<std::string, material_s> materials = create_materials();
